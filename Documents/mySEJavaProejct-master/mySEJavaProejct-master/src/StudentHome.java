import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import project.ConnectionProvider;

public class StudentHome extends javax.swing.JFrame {

    int latestid;

    public StudentHome() {

    }

    StudentHome(int latestid) {
        this.latestid = latestid;
        System.out.println("latest id is " + latestid);
        initComponents();
        jTabbedPane1.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent ex) {
                jTable1.setVisible(false);
                if (jTabbedPane1.getSelectedIndex() == 1) {

                    DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();
//                    model1.setRowCount(0);
 //                   model1.fireTableDataChanged();
                    try {

                        Connection con = ConnectionProvider.getCon();
                        Statement stmt = con.createStatement();
                        String SQL = "SELECT * FROM books WHERE issuedto='" + latestid + "'";
                        ResultSet rs = stmt.executeQuery(SQL);
                        while (rs.next()) {
                            mybooktable.setVisible(true);
                            int id = rs.getInt("bookid");

                            String name = rs.getString("bookname");
                            String title = rs.getString("bokktitle");
                            String author = rs.getString("bookauthor");
                            String issuedto = rs.getString("issuedto");

                            Object[] row = {id, name, title, author, issuedto};

                            DefaultTableModel model = (DefaultTableModel) mybooktable.getModel();

                            model.addRow(row);

                        }

                    } catch (Exception e) {
                        System.out.println(e);
                    }
                } else if (jTabbedPane1.getSelectedIndex() == 2) {
                    try {

                        DefaultTableModel model1 = (DefaultTableModel) mybooktable.getModel();
  //                      model1.setRowCount(0);
  //                      model1.fireTableDataChanged();

                        Connection con = ConnectionProvider.getCon();
                        Statement stmt = con.createStatement();
                        String SQL = "SELECT * FROM books ";
                        ResultSet rs = stmt.executeQuery(SQL);
                        while (rs.next()) {
                            jTable3.setVisible(true);
                            int id = rs.getInt("bookid");
                            String name = rs.getString("bookname");
                            String title = rs.getString("bokktitle");
                            String author = rs.getString("bookauthor");
                            String issuedto = rs.getString("issuedto");
                            Object[] row = {id, name, title, author, issuedto};
                            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();        
                            model.addRow(row);

                        }

                    } catch (Exception e) {
                        System.out.println(e);
                    }

                }

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mybooktable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Welcome Studemt");

        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Book Name", "Book Author", "Book Title", "Issued To"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Borrow Book");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Seach Book", jPanel1);

        mybooktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Book Name", "Book Author", "Book Title", "Issued To"
            }
        ));
        jScrollPane2.setViewportView(mybooktable);

        jButton1.setText("Return Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("My Books", jPanel2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Book Name", "Book Author", "Book Title", "Issued To"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("All Books", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String search = jTextField1.getText();
        if (search.equals("")) {
            JOptionPane.showMessageDialog(null, "Pls enter book name");

        } else {
            try {

                Connection con = ConnectionProvider.getCon();
                Statement stmt = con.createStatement();
                String SQL = "SELECT * FROM books WHERE bookname='" + search + "'";
                ResultSet rs = stmt.executeQuery(SQL);
                if (rs.next()) {
                    jTable1.setVisible(true);
                    int id = rs.getInt("bookid");

                    String name = rs.getString("bookname");
                    String title = rs.getString("bokktitle");
                    String author = rs.getString("bookauthor");
                    String issuedto = rs.getString("issuedto");

                    Object[] row = {id, name, title, author, issuedto};

                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                    model.addRow(row);

                } else {
                    JOptionPane.showMessageDialog(null, "Please enter correct book name");
                }

            } catch (Exception e) {
                System.out.println(e);
            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {
            int column = 4;
            int row = jTable1.getSelectedRow();
            String value = jTable1.getModel().getValueAt(row, column).toString();
            System.out.println("value is " + value);

            jButton3.setVisible(true);
            if (jTable1.getRowCount() > 0 && value.equals("")) {

                Connection con = ConnectionProvider.getCon();
                String query = "update books set issuedto = '" + latestid + "'where bookname = '" + jTextField1.getText() + "'";
                PreparedStatement preparedStmt = con.prepareStatement(query);

                preparedStmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Book Issued Successfully to " + latestid);
                jTextField1.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Book already issued");
            }
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        DefaultTableModel model1 = (DefaultTableModel) mybooktable.getModel();                       
        int column = 0;
        int row = mybooktable.getSelectedRow();
        System.out.println("row is "+row);
        String value = mybooktable.getModel().getValueAt(row, column).toString();
        System.out.println("selected value is " + value);
        System.out.println("value ois"+value);
        String temp = "";

        if (mybooktable.getRowCount() > 0) {
            try {
                Connection con = ConnectionProvider.getCon();
                String query = "update books set issuedto =' ' where bookid = '" + latestid + "'";
                PreparedStatement preparedStmt = con.prepareStatement(query);
                preparedStmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Book Returned Successfully ");
                model1.fireTableDataChanged();
            } catch (Exception e) {
                System.out.println(e);

            }
        }
       
        model1.fireTableDataChanged();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        dispose();
        new login().setVisible(true);


    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentHome().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable mybooktable;
    // End of variables declaration//GEN-END:variables
}
